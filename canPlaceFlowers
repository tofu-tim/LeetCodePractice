/**

You have a long flowerbed in which some of the plots are planted, and some are not. However, flowers cannot be planted in adjacent plots.

Given an integer array flowerbed containing 0's and 1's, where 0 means empty and 1 means not empty, and an integer n, return true if n new

flowers can be planted in the flowerbed without violating the no-adjacent-flowers rule and false otherwise.

*/

class canPlace:
    def canPlaceFlowers(self, flowerbed: List[int], n: int) -> bool:
        # Add 0's at the beginning and end to handle edge cases
        flowerbed = [0] + flowerbed + [0]
        count = 0
        for i in range(1, len(flowerbed) - 1):
            # Check if current plot and neighbors are all empty
            if flowerbed[i-1:i+2] == [0, 0, 0]:
                # Plant a flower and update count
                flowerbed[i] = 1
                count += 1
            # If enough flowers have been planted, return True
            if count >= n:
                return True
        # Return False if not enough flowers have been planted
        return False
